name: Deploy ECS Infrastructure

on:
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  TF_VERSION: 1.5.0
  PROJECT_NAME: CT-ECS
  APP_PORT: 8080

jobs:
  deploy:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform Init
      working-directory: ./infrastructure
      run: terraform init

    - name: Terraform Plan
      working-directory: ./infrastructure
      run: |
        terraform plan \
          -var="project_name=${{ env.PROJECT_NAME }}" \
          -var="common_tags={Project=\"nodejs-app\",ManagedBy=\"terraform\"}" \
          -out=tfplan

    - name: Terraform Apply
      working-directory: ./infrastructure
      run: terraform apply -auto-approve tfplan

    - name: Output ECS Service Info
      working-directory: ./infrastructure
      run: |
        echo "## Infrastructure Deployment Complete!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Load Balancer DNS:** $(terraform output -raw load_balancer_dns 2>/dev/null || echo 'Not available')" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**ECS Cluster:** $(terraform output -raw ecs_cluster_name 2>/dev/null || echo 'Not available')" >> $GITHUB_STEP_SUMMARY